[tool.poetry]
name = "crypto-invest-portfolio"
version = "0.0.1"
description = "This is a repository python project of a crypto investment portfolio."
authors = ["Adrien Pajon <adrien.pajon@gmail.com>"]
readme = "README.md"
keywords = ["python"]
packages = [{include = "crypto_invest_portfolio", from = "src"}]

[tool.poetry.urls]
Homepage = "https://apajon.github.io/crypto-invest-portfolio/"
Repository = "https://github.com/apajon/crypto-invest-portfolio"
Documentation = "https://apajon.github.io/crypto-invest-portfolio/"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.2.0"
pre-commit = ">=2.20.0"
black = ">=23.0.0"
tbump = ">=6.9.0"
deptry = ">=0.23.0"
mypy = ">=0.991"
pytest-cov = ">=4.0.0"
ruff = ">=0.11.5"
mkdocs = ">=1.4.2"
mkdocs-material = ">=8.5.10"
mkdocstrings = {extras = ["python"], version = ">=0.26.1"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.black]
line-length = 120
target-version = ["py312", "py313"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.tbump]
# tbump configuration for automated version bumping
github_url = "https://github.com/apajon/crypto-invest-portfolio"

[tool.tbump.version]
current = "0.0.1"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[[tool.tbump.file]]
src = "pyproject.toml"
search = 'version = "{current_version}"'

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.after_push]]
name = "push-follow-tags"
cmd = "git push --follow-tags"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]
